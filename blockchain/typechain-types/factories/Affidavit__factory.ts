/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Affidavit, AffidavitInterface } from "../Affidavit";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "affidavitId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "address",
        name: "issuer",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AffidavitCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "affidavitId",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "category",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "string",
            name: "affidavitId",
            type: "string",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "issuerName",
            type: "string",
          },
          {
            internalType: "string",
            name: "issuerIdCardNumber",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "dateRequested",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "dateIssued",
            type: "uint256",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
          {
            components: [
              {
                internalType: "string",
                name: "role",
                type: "string",
              },
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "idCardNumber",
                type: "string",
              },
              {
                internalType: "address",
                name: "userAddress",
                type: "address",
              },
            ],
            internalType: "struct Affidavit.Party[]",
            name: "parties",
            type: "tuple[]",
          },
          {
            components: [
              {
                internalType: "string",
                name: "name",
                type: "string",
              },
              {
                internalType: "string",
                name: "idCardNumber",
                type: "string",
              },
              {
                internalType: "address",
                name: "userAddress",
                type: "address",
              },
            ],
            internalType: "struct Affidavit.Witness[]",
            name: "witnesses",
            type: "tuple[]",
          },
          {
            internalType: "string[]",
            name: "documentHashes",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "description",
            type: "string",
          },
          {
            internalType: "string",
            name: "declaration",
            type: "string",
          },
        ],
        internalType: "struct Affidavit.AffidavitData",
        name: "affidavitData",
        type: "tuple",
      },
    ],
    name: "createAffidavit",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [],
    name: "createdAt",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dateIssued",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "dateRequested",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "declaration",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "description",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "documentHashes",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAffidavitBasicInfo",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAffidavitDetails",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "string",
        name: "",
        type: "string",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getAffidavitParticipants",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "role",
            type: "string",
          },
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "idCardNumber",
            type: "string",
          },
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
        ],
        internalType: "struct Affidavit.Party[]",
        name: "",
        type: "tuple[]",
      },
      {
        components: [
          {
            internalType: "string",
            name: "name",
            type: "string",
          },
          {
            internalType: "string",
            name: "idCardNumber",
            type: "string",
          },
          {
            internalType: "address",
            name: "userAddress",
            type: "address",
          },
        ],
        internalType: "struct Affidavit.Witness[]",
        name: "",
        type: "tuple[]",
      },
      {
        internalType: "string[]",
        name: "",
        type: "string[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuer",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuerIdCardNumber",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "issuerName",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "parties",
    outputs: [
      {
        internalType: "string",
        name: "role",
        type: "string",
      },
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "idCardNumber",
        type: "string",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "status",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "title",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "witnesses",
    outputs: [
      {
        internalType: "string",
        name: "name",
        type: "string",
      },
      {
        internalType: "string",
        name: "idCardNumber",
        type: "string",
      },
      {
        internalType: "address",
        name: "userAddress",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
] as const;

const _bytecode =
  "0x6080806040523461002c57600d80546001600160a01b0319163317905542600e556124d590816100328239f35b600080fdfe6080604052600436101561001257600080fd5b60003560e01c806306e5beff14611b685780631846c983146117fa5780631d143848146117d1578063200d2ed2146117b55780632e9868f81461179957806348dc16501461177b5780634a79d50c1461175f578063670a8cb7146116e057806370651a18146116435780637284e4161461162757806385f4f867146103135780638e383c6b146102c6578063ad6bdc5e146102a8578063b1a6afd31461028c578063bc87e64614610270578063cf09e0d014610252578063d7f78e811461018f578063ef430aa61461015b5763f860c2f2146100ed57600080fd5b3461015657600036600319011261015657600d54600e54610139916001600160a01b0316610119611e98565b91610147610125611f31565b6040519586956080875260808701906121a0565b9085820360208701526121a0565b91604084015260608301520390f35b600080fd5b346101565760003660031901126101565761018b610177612063565b6040519182916020835260208301906121a0565b0390f35b346101565760003660031901126101565761020260055461018b600654916101b5611c15565b926101be611e02565b9061023a6101ca612063565b61022c6101d5611d69565b61021e6101e0611fca565b936102106101ec611cd0565b986040519d8e9d8e6101009081815201906121a0565b8d810360208f0152906121a0565b908b820360408d01526121a0565b9089820360608b01526121a0565b9087820360808901526121a0565b9260a086015260c085015283820360e08501526121a0565b34610156576000366003190112610156576020600e54604051908152f35b346101565760003660031901126101565761018b610177611fca565b346101565760003660031901126101565761018b610177611f31565b34610156576000366003190112610156576020600654604051908152f35b3461015657602036600319011261015657600435600a54811015610156576102ed906122ec565b6102fd5761017761018b916120fc565b634e487b7160e01b600052600060045260246000fd5b600319602036820112610156576001600160401b0360043511610156576101a0809160043536030112610156576040519081018181106001600160401b03821117610a3657604052600435600401356001600160401b0381116101565761038190600436918135010161226b565b8152602460043501356001600160401b038111610156576103a990600436918135010161226b565b6020820152604460043501356001600160401b038111610156576103d490600436918135010161226b565b6040820152606460043501356001600160401b038111610156576103ff90600436918135010161226b565b6060820152608460043501356001600160401b0381116101565761042a90600436918135010161226b565b608082015260043560a481013560a083015260c481013560c083015260e401356001600160401b0381116101565761046990600436918135010161226b565b60e082015261010460043501356001600160401b038111610156573660238260043501011215610156576104a360048281350101356122c1565b906104b16040519283611bf4565b600480358201908101358084526020840192913660059290921b0160240111610156576024816004350101915b6004803583019081013560051b0160240183106115305750505061010082015261012460043501356001600160401b0381116101565736602382600435010112156101565761053360048281350101356122c1565b906105416040519283611bf4565b600480358201908101358084526020840192913660059290921b0160240111610156576024816004350101915b6004803583019081013560051b01602401831061146d5750505061012082015261014460043501356001600160401b038111610156573660238260043501011215610156576105c360048281350101356122c1565b906105d16040519283611bf4565b600480358201908101358084526020840192913660059290921b0160240111610156576024816004350101915b6004803583019081013560051b01602401831061143b575050506101408201526001600160401b03610164600435013511610156576106483660048035610164810135010161226b565b6101608201526001600160401b03610184600435013511610156576106783660048035610184810135010161226b565b610180820152662386f26fc1000034106113f65780518051906001600160401b038211610a365781906106ac600054611b84565b601f81116113a8575b50602090601f831160011461131f57600092611314575b50508160011b916000199060031b1c1916176000555b60208101518051906001600160401b038211610a36578190610705600154611b84565b601f81116112c5575b50602090601f831160011461123b57600092611230575b50508160011b916000199060031b1c1916176001555b60408101518051906001600160401b038211610a3657819061075e600254611b84565b601f81116111e1575b50602090601f83116001146111575760009261114c575b50508160011b916000199060031b1c1916176002555b60608101518051906001600160401b038211610a365781906107b7600354611b84565b601f81116110fd575b50602090601f831160011461107357600092611068575b50508160011b916000199060031b1c1916176003555b60808101518051906001600160401b038211610a36578190610810600454611b84565b601f8111611019575b50602090601f8311600114610f8f57600092610f84575b50508160011b916000199060031b1c1916176004555b60a081015160055560c081015160065560e08101518051906001600160401b038211610a36578190610879600754611b84565b601f8111610f35575b50602090601f8311600114610eab57600092610ea0575b50508160011b916000199060031b1c1916176007555b6101608101518051906001600160401b038211610a365781906108d3600b54611b84565b601f8111610e51575b50602090601f8311600114610dc757600092610dbc575b50508160011b916000199060031b1c191617600b555b6101808101518051906001600160401b038211610a3657819061092d600c54611b84565b601f8111610d62575b50602090601f8311600114610cd857600092610ccd575b50508160011b916000199060031b1c191617600c555b600854600060085580610c51575b50600954600060095580610bd0575b50600a546000600a5580610b86575b5060005b6101008201518051821015610a4c57816109ac9161248b565b5190600854600160401b811015610a36578060016109cd9201600855612231565b9290926102fd576003610a31936109e583518261233a565b6109f660208401516001830161233a565b610a0760408401516002830161233a565b0190606060018060a01b03910151166bffffffffffffffffffffffff60a01b82541617905561247c565b610993565b634e487b7160e01b600052604160045260246000fd5b8260005b6101208201518051821015610ae25781610a699161248b565b5190600954600160401b811015610a3657806001610a8a92016009556121e0565b9290926102fd576002610add93610aa283518261233a565b610ab360208401516001830161233a565b0190604060018060a01b03910151166bffffffffffffffffffffffff60a01b82541617905561247c565b610a50565b8260005b6101408201518051821015610b3b5781610aff9161248b565b5190600a54600160401b811015610a3657806001610b209201600a556122ec565b6102fd57610b3692610b319161233a565b61247c565b610ae6565b7faad66bf4bd607e4a7b173367ae3cf986a4657522184691ea8747a6079ca100de610b7584516040519182916060835260608301906121a0565b3360208301524260408301520390a1005b600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8908101905b818110610bbe575061098f565b80610bca600192612433565b01610bb1565b80600302906003820403610c3b5760096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af908101905b818110610c165750610980565b80610c22600392612433565b610c2e60018201612433565b6000600282015501610c09565b634e487b7160e01b600052601160045260246000fd5b6001600160fe1b0381168103610c3b5760086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee39060021b8101905b818110610c9c5750610971565b80610ca8600492612433565b610cb460018201612433565b610cc060028201612433565b6000600382015501610c8f565b01519050838061094d565b9250600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7906000935b601f1984168510610d47576001945083601f19811610610d2e575b505050811b01600c55610963565b015160001960f88460031b161c19169055838080610d20565b81810151835560209485019460019093019290910190610d05565b610dac90600c6000527fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c7601f850160051c81019160208610610db2575b601f0160051c0190612323565b84610936565b9091508190610d9f565b0151905083806108f3565b9250600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9906000935b601f1984168510610e36576001945083601f19811610610e1d575b505050811b01600b55610909565b015160001960f88460031b161c19169055838080610e0f565b81810151835560209485019460019093019290910190610df4565b610e9a90600b6000527f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db9601f850160051c81019160208610610db257601f0160051c0190612323565b846108dc565b015190508380610899565b925060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688906000935b601f1984168510610f1a576001945083601f19811610610f01575b505050811b016007556108af565b015160001960f88460031b161c19169055838080610ef3565b81810151835560209485019460019093019290910190610ed8565b610f7e9060076000527fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c688601f850160051c81019160208610610db257601f0160051c0190612323565b84610882565b015190508380610830565b925060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b906000935b601f1984168510610ffe576001945083601f19811610610fe5575b505050811b01600455610846565b015160001960f88460031b161c19169055838080610fd7565b81810151835560209485019460019093019290910190610fbc565b6110629060046000527f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b601f850160051c81019160208610610db257601f0160051c0190612323565b84610819565b0151905083806107d7565b925060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b906000935b601f19841685106110e2576001945083601f198116106110c9575b505050811b016003556107ed565b015160001960f88460031b161c191690558380806110bb565b818101518355602094850194600190930192909101906110a0565b6111469060036000527fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b601f850160051c81019160208610610db257601f0160051c0190612323565b846107c0565b01519050838061077e565b925060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace906000935b601f19841685106111c6576001945083601f198116106111ad575b505050811b01600255610794565b015160001960f88460031b161c1916905583808061119f565b81810151835560209485019460019093019290910190611184565b61122a9060026000527f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace601f850160051c81019160208610610db257601f0160051c0190612323565b84610767565b015190508380610725565b925060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6906000935b601f19841685106112aa576001945083601f19811610611291575b505050811b0160015561073b565b015160001960f88460031b161c19169055838080611283565b81810151835560209485019460019093019290910190611268565b61130e9060016000527fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf6601f850160051c81019160208610610db257601f0160051c0190612323565b8461070e565b0151905083806106cc565b9250600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563906000935b601f198416851061138d576001945083601f19811610611374575b505050811b016000556106e2565b015160001960f88460031b161c19169055838080611366565b8181015183556020948501946001909301929091019061134b565b6113f090600080527f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e563601f850160051c81019160208610610db257601f0160051c0190612323565b846106b5565b60405162461bcd60e51b815260206004820152601960248201527f4d696e696d756d20302e303120455448207265717569726564000000000000006044820152606490fd5b6001600160401b03833511610156576020809161146236602487358760043501010161226b565b8152019201916105fe565b6001600160401b038335116101565760606004358301843501360360231901126101565760405161149d81611bd9565b6001600160401b0360248535856004350101013511610156576114cf366024863560043587010181810135010161226b565b81526001600160401b036044853585600435010101351161015657602091829161150936600435870188350160448101350160240161226b565b8382015261152060648735876004350101016122d8565b604082015281520192019161056e565b82356001600160401b0381116101565760806004358401820136036023190112610156576040519161156183611bbe565b6001600160401b03602483866004350101013511610156576115913660246004358701850181810135010161226b565b83526001600160401b03604483866004350101013511610156576115c4366004358601840160448101350160240161226b565b60208401526001600160401b0360648386600435010101351161015657602092839261161790608490611606366004358a01830160648101350160240161226b565b6040850152876004350101016122d8565b60608201528152019201916104de565b346101565760003660031901126101565761018b610177611e98565b34610156576020366003190112610156576004356008548110156101565761166d6116ba91612231565b50611677816120fc565b906116d6611687600183016120fc565b916116c8611697600283016120fc565b91600360018060a01b0391015416936040519687966080885260808801906121a0565b9086820360208801526121a0565b9084820360408601526121a0565b9060608301520390f35b34610156576020366003190112610156576004356009548110156101565761170a611747916121e0565b50611714816120fc565b90611755611724600183016120fc565b91600260018060a01b0391015416916040519485946060865260608601906121a0565b9084820360208601526121a0565b9060408301520390f35b346101565760003660031901126101565761018b610177611e02565b34610156576000366003190112610156576020600554604051908152f35b346101565760003660031901126101565761018b610177611d69565b346101565760003660031901126101565761018b610177611cd0565b3461015657600036600319011261015657600d546040516001600160a01b039091168152602090f35b3461015657600036600319011261015657600854611817816122c1565b6118246040519182611bf4565b818152602091828201908160086000527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee3856000925b848410611b0a5750858560095492611871846122c1565b9261187f6040519485611bf4565b848452818401948560096000527f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af846000925b848410611abd575050505050600a54926118cb846122c1565b916118d96040519384611bf4565b8483528383019485600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a8866000925b848410611a9f5750505050509060405195606092838801908489525180915260809081890191808260051b8b010194926000915b898c858510611a2e57955050505050508203858801525190818152848101858360051b83010198936000925b8484106119d25750505050505083850360408501525180855281850191808260051b87010193926000965b8388106119a45786860387f35b909192939483806119c1600193601f1986820301875289516121a0565b970193019701969093929193611997565b9091929394998780600192601f198582030187528d51906040611a0f6119ff84518a85528a8501906121a0565b85850151848203878601526121a0565b9281878060a01b03910151169101529c0194019401929493919061196c565b6001929394959699988291607f199082030186528a51908a611a7f611a6d611a5d85518a86528a8601906121a0565b86860151858203888701526121a0565b604085015184820360408601526121a0565b9281015160a087901b879003169101529899019594909101920190611940565b6001918291611aad856120fc565b815201920192019190879061190c565b600191600391604051611acf81611bd9565b611ad8866120fc565b8152611ae58587016120fc565b83820152848060a01b03600287015416604082015281520192019201919085906118b2565b600191600491604051611b1c81611bbe565b611b25866120fc565b8152611b328587016120fc565b83820152611b42600287016120fc565b6040820152848060a01b036003870154166060820152815201920192019190869061185a565b346101565760003660031901126101565761018b610177611c15565b90600182811c92168015611bb4575b6020831014611b9e57565b634e487b7160e01b600052602260045260246000fd5b91607f1691611b93565b608081019081106001600160401b03821117610a3657604052565b606081019081106001600160401b03821117610a3657604052565b90601f801991011681019081106001600160401b03821117610a3657604052565b60405190600082815491611c2883611b84565b80835292600190818116908115611cae5750600114611c51575b50611c4f92500383611bf4565b565b600080805291507f290decd9548b62a8d60345a988386fc84ba6bc95484008f6362f93160ef3e5635b848310611c935750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611c7a565b905060209250611c4f94915060ff191682840152151560051b82010138611c42565b6040519060008260075491611ce483611b84565b80835292600190818116908115611cae5750600114611d0a5750611c4f92500383611bf4565b6007600090815291507fa66cc928b5edb82af9bd49922954155ab7b0942694bea4ce44661d9a8736c6885b848310611d4e5750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611d35565b6040519060008260035491611d7d83611b84565b80835292600190818116908115611cae5750600114611da35750611c4f92500383611bf4565b6003600090815291507fc2575a0e9e593c00f959f8c92f12db2869c3395a3b0502d05e2516446f71f85b5b848310611de75750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611dce565b60405190600082600191825492611e1884611b84565b80845293818116908115611cae5750600114611e3b5750611c4f92500383611bf4565b600081815291507fb10e2d527612073b26eecdfd717e6a320cf44b4afac2b0732d9fcbe2b7fa0cf65b848310611e7d5750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611e64565b60405190600082600b5491611eac83611b84565b80835292600190818116908115611cae5750600114611ed25750611c4f92500383611bf4565b600b600090815291507f0175b7a638427703f0dbe7bb9bbf987a2551717b34e79f33b5b1008d1fa01db95b848310611f165750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611efd565b60405190600082600c5491611f4583611b84565b80835292600190818116908115611cae5750600114611f6b5750611c4f92500383611bf4565b600c600090815291507fdf6966c971051c3d54ec59162606531493a51404a002842f56009d7e5cf4a8c75b848310611faf5750611c4f935050810160200138611c42565b81935090816020925483858a01015201910190918592611f96565b6040519060008260045491611fde83611b84565b80835292600190818116908115611cae57506001146120045750611c4f92500383611bf4565b6004600090815291507f8a35acfbc15ff81a39ae7d344fd709f28e8600b4aa8c65c6b64bfe7fe36bd19b5b8483106120485750611c4f935050810160200138611c42565b81935090816020925483858a0101520191019091859261202f565b604051906000826002549161207783611b84565b80835292600190818116908115611cae575060011461209d5750611c4f92500383611bf4565b6002600090815291507f405787fa12a823e0f2b7631cc41b3ba8828b3321ca811111fa75cd3aa3bb5ace5b8483106120e15750611c4f935050810160200138611c42565b81935090816020925483858a010152019101909185926120c8565b906040519182600082549261211084611b84565b90818452600194858116908160001461217d575060011461213a575b5050611c4f92500383611bf4565b9093915060005260209081600020936000915b818310612165575050611c4f9350820101388061212c565b8554888401850152948501948794509183019161214d565b915050611c4f94506020925060ff191682840152151560051b820101388061212c565b919082519283825260005b8481106121cc575050826000602080949584010152601f8019910116010190565b6020818301810151848301820152016121ab565b60095481101561221b576003906009600052027f6e1540171b6c0c960b71a7020d9f60077f6af931a8bbf590da0223dacf75c7af0190600090565b634e487b7160e01b600052603260045260246000fd5b60085481101561221b57600860005260021b7ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30190600090565b81601f82011215610156578035906001600160401b038211610a36576040519261229f601f8401601f191660200185611bf4565b8284526020838301011161015657816000926020809301838601378301015290565b6001600160401b038111610a365760051b60200190565b35906001600160a01b038216820361015657565b600a5481101561221b57600a6000527fc65a7bb8d6351c1cf70c95a316cc6a92839c986682d98bc35f958f4883f9d2a80190600090565b81811061232e575050565b60008155600101612323565b91909182516001600160401b038111610a36576123578254611b84565b601f8111612401575b50602080601f831160011461239d575081929394600092612392575b50508160011b916000199060031b1c1916179055565b01519050388061237c565b90601f198316958460005282600020926000905b8882106123e9575050836001959697106123d0575b505050811b019055565b015160001960f88460031b161c191690553880806123c6565b806001859682949686015181550195019301906123b1565b61242d90836000526020600020601f840160051c81019160208510610db257601f0160051c0190612323565b38612360565b61243d8154611b84565b9081612447575050565b81601f60009311600114612459575055565b908083918252612478601f60208420940160051c840160018501612323565b5555565b6000198114610c3b5760010190565b805182101561221b5760209160051b01019056fea2646970667358221220b4aac1e359e465ef76e1e7967c499e0eb29c7bb2a9604ac42ed3bcde610ed5bc64736f6c63430008140033";

type AffidavitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AffidavitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Affidavit__factory extends ContractFactory {
  constructor(...args: AffidavitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Affidavit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Affidavit__factory {
    return super.connect(runner) as Affidavit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AffidavitInterface {
    return new Interface(_abi) as AffidavitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Affidavit {
    return new Contract(address, _abi, runner) as unknown as Affidavit;
  }
}
