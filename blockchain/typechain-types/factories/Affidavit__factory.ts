/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import {
  Contract,
  ContractFactory,
  ContractTransactionResponse,
  Interface,
} from "ethers";
import type { Signer, ContractDeployTransaction, ContractRunner } from "ethers";
import type { NonPayableOverrides } from "../common";
import type { Affidavit, AffidavitInterface } from "../Affidavit";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "string",
        name: "displayId",
        type: "string",
      },
      {
        indexed: false,
        internalType: "string",
        name: "status",
        type: "string",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    name: "AffidavitStored",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "affidavitExists",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "affidavits",
    outputs: [
      {
        internalType: "string",
        name: "displayId",
        type: "string",
      },
      {
        internalType: "string",
        name: "title",
        type: "string",
      },
      {
        internalType: "string",
        name: "category",
        type: "string",
      },
      {
        internalType: "string",
        name: "issuerId",
        type: "string",
      },
      {
        internalType: "string",
        name: "issuerIdCardNumber",
        type: "string",
      },
      {
        internalType: "string",
        name: "status",
        type: "string",
      },
      {
        internalType: "uint256",
        name: "timestamp",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayId",
        type: "string",
      },
    ],
    name: "getAffidavit",
    outputs: [
      {
        components: [
          {
            internalType: "string",
            name: "displayId",
            type: "string",
          },
          {
            internalType: "string",
            name: "title",
            type: "string",
          },
          {
            internalType: "string",
            name: "category",
            type: "string",
          },
          {
            internalType: "string",
            name: "issuerId",
            type: "string",
          },
          {
            internalType: "string",
            name: "issuerIdCardNumber",
            type: "string",
          },
          {
            internalType: "string[]",
            name: "partyIds",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "partyIdCardNumbers",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "witnessNames",
            type: "string[]",
          },
          {
            internalType: "string[]",
            name: "witnessIdCardNumbers",
            type: "string[]",
          },
          {
            internalType: "string",
            name: "status",
            type: "string",
          },
          {
            internalType: "uint256",
            name: "timestamp",
            type: "uint256",
          },
        ],
        internalType: "struct Affidavit.AffidavitData",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_title",
        type: "string",
      },
      {
        internalType: "string",
        name: "_category",
        type: "string",
      },
      {
        internalType: "string",
        name: "_issuerId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_issuerIdCardNumber",
        type: "string",
      },
      {
        internalType: "string[]",
        name: "_partyIds",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_partyIdCardNumbers",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_witnessNames",
        type: "string[]",
      },
      {
        internalType: "string[]",
        name: "_witnessIdCardNumbers",
        type: "string[]",
      },
      {
        internalType: "string",
        name: "_status",
        type: "string",
      },
    ],
    name: "storeAffidavit",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_displayId",
        type: "string",
      },
      {
        internalType: "string",
        name: "_status",
        type: "string",
      },
    ],
    name: "updateAffidavitStatus",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
] as const;

const _bytecode =
  "";

type AffidavitConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: AffidavitConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class Affidavit__factory extends ContractFactory {
  constructor(...args: AffidavitConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override getDeployTransaction(
    overrides?: NonPayableOverrides & { from?: string }
  ): Promise<ContractDeployTransaction> {
    return super.getDeployTransaction(overrides || {});
  }
  override deploy(overrides?: NonPayableOverrides & { from?: string }) {
    return super.deploy(overrides || {}) as Promise<
      Affidavit & {
        deploymentTransaction(): ContractTransactionResponse;
      }
    >;
  }
  override connect(runner: ContractRunner | null): Affidavit__factory {
    return super.connect(runner) as Affidavit__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): AffidavitInterface {
    return new Interface(_abi) as AffidavitInterface;
  }
  static connect(address: string, runner?: ContractRunner | null): Affidavit {
    return new Contract(address, _abi, runner) as unknown as Affidavit;
  }
}
